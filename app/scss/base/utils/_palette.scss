// @palette functions
// @author: mbertoldo@alpenite.com
// @access: private

// Function for catch color palette in $colors-palette map.
// @note: use -> .my-element { color: palette(1); }
// @author: mbertoldo@alpenite.com
// --------------------------------

@function palette($color) {
	@if map-has-key($palette-color, $color) {
        @return map-get($palette-color, $color);
    } @else {
        @warn 'No color palette found in `$colors-palette` map.';
    }
}

// Mixin for mixin to intercept the "primary" key in $colors-palette map.
// @note: as in Foundation, this mixin avoids having the empty $color-palette map.
// --------------------------------

@mixin manage-palette {
    @if not map-has-key($palette-color, primary) {
        @error 'In `$palette-color`, you must have a key named "primary".';
    }
}
