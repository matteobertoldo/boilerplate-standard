// @mixins accessibility
// @author: mbertoldo@alpenite.com
// @component: core

// Mixin for visuallyhidden.
// @note: this hide the target element visually only, but not it's interaction.
// ----------------------------

@mixin visuallyhidden {
    position: absolute;
    top: 0;
    left: 0;
    width: 1px;
    height: 1px;
    border: 0;
    white-space: nowrap;
    clip: rect(1px, 1px, 1px, 1px);
    overflow: hidden;
    margin: -1px;
    padding: 0;
}

// Mixin for visuallyhidden-off.
// @note: restores the style applied by `visuallyhidden` mixin.
// ----------------------------

@mixin visuallyhidden-off {
    position: static;
    width: auto;
    height: auto;
    border: initial;
    white-space: inherit;
    clip: none;
    overflow: inherit;
    margin: 0;
}

// @accessibility classes mixin
// @author: mbertoldo@alpenite.com
// @note: packages of classes to be invoked via template
// --------------------------------

@mixin accessibility-classes {
    /*@accessibility classes & pseudo elem*/
    ::selection {
        background: $selection-background-color;
        @if ($global-selection-color) {
            color: $selection-color;
        }
        text-shadow: none;
    }

    .invisible {
        visibility: hidden;
    }

    .visuallyhidden {
        @include visuallyhidden;
    }

    .visuallyhidden-off {
        @include visuallyhidden-off;
    }

    .no-select {
        user-select: none;
    }

    .no-touch {
        -webkit-touch-callout: none;
        touch-action: none;
    }

    .no-text {
        @include no-text;
    }

    .no-overflow {
        overflow: hidden;
    }

    .no-display {
        display: none;
    }
}
