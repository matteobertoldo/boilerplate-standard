// @mixins typography
// @author: mbertoldo@alpenite.com
// @component: core

// Reset Default Font Rendering.
// @param 1: reset all default font synthesis of browsers
// @param 2: set all text to perform legibility
// @param 3: reset default font-base on -webkit-core
// @param 4: remove exeed weight on -moz-core on macOS
// @param 5: set on -moz-core the same font -webkit-core ligature and "kerning" (http://blog.typekit.com/2014/02/05/kerning-on-the-web/)
// ----------------------------------------------------------------------

@mixin font-smoothing {
	font-synthesis: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-moz-font-feature-settings: 'liga', 'kern';
}

// Fix scaling font on mobile device and on device orientation.
// @param 1: reset scaling on -ms-core (IE 10+ mobile)
// @param 2: reset scaling on -webkit-core (iOS)
// ----------------------------------------------------------------------

@mixin text-size-adjust {
	-ms-text-size-adjust: percentage(1);
	-webkit-text-size-adjust: percentage(1);
}

// Mixin for restore the font dependencies styles.
// ----------------------------------------------------------------------

@mixin font-reset {
    font: {
		synthesis: none;
		weight: normal;
		size: normal;
	}
	text-transform: none;
}

// Mixin for no text shown.
// @param 1 : fix the space generated on <a/> tag if it's not defined as (block || inline-block)
// ----------------------------------------------------------------------

@mixin no-text {
	font: 0/0 a;
    text-indent: percentage(1);
    white-space: nowrap;
    color: transparent;
    overflow: hidden;
}

// Mixin for ellipsis text.
// @note: create ellipsis on text -> mytext...
// ----------------------------------------------------------------------

@mixin text-ellipsis {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
}

// Mixin for font face rule.
// @require: {function} str-replace
// @note: important the @var "$font-dir" is defined on config @typography
// @use: @include font-face("My Font Name", my_font_file, font-style-value, font-weight-value, font-type, ie-old-support);
// @author: mbertoldo@alpenite.com
// ----------------------------------------------------------------------

@mixin font-face($font-name, $font-file, $style: normal, $weight: normal, $category: null, $ie-old-support: false) {
	$filepath: $font-dir + $font-file;
	$filter-font-name: str-replace($font-name, ' ', '_');

	@font-face {
		font: {
			@if $category != null {
				family: '#{$font-name}', #{$category};
			} @else {
				family: '#{$font-name}';
			}
			style: $style;
			weight: $weight;
		}

		@if $ie-old-support == false {
			src: url($filepath + '.woff') format('woff'),
				 url($filepath + '.woff2') format('woff2'),
				 url($filepath + '.ttf') format('truetype'),
				 url($filepath + '.svg#' + $filter-font-name) format('svg');
		} @else {
			src: url($filepath + '.eot');
			src: url($filepath + '.eot?#iefix') format('embedded-opentype'),
				 url($filepath + '.woff') format('woff'),
				 url($filepath + '.woff2') format('woff2'),
				 url($filepath + '.ttf') format('truetype'),
				 url($filepath + '.svg#' + $filter-font-name) format('svg');
		}
    }
}
