// Mixin for Placeholder, create multiple instances of the placeholder pseudo element.
// @param: `-moz-` render the pseudo placeholder element with opacity included. We set it's value to 1 if you want to see the full color.
// @param: `$on-focus` if `focus-hidden` is set, we make clear the pseudo element (only in -webkit- and -moz- render, in IE is already present this behavior.)
// @author: mbertoldo@alpenite.com
// ----------------------------------

// @use 1: (placeholder color is #ccc)
// ------------------------
// .myselector {
// 		@include placeholder(#ccc);
// }

// @use 2: (placeholder color is #ccc, on focus it will be hidden)
// ------------------------
// .myselector {
// 		@include placeholder(#ccc, 'focus-hidden');
// }

// @use 3: (placeholder color is #ccc on focus will become #333)
// ------------------------
// .myselector {
// 		@include placeholder(#ccc, 'focus', #333);
// }

@mixin placeholder($placeholder-color, $on-focus: null, $placeholder-focus-color: initial) {
	$prefix: '-placeholder';

	@each $vendor in ('::-webkit-input', '::-moz', ':-ms') {
		&#{$vendor}#{$prefix} {
			color: $placeholder-color;

            @if ($vendor == '::-moz') {
				opacity: 1;
			}
		}

        @if ($on-focus == 'focus') {
            &:focus#{$vendor}#{$prefix} {
                &:focus#{$vendor}#{$prefix} {
                    @if ($vendor != ':-ms') {
                        color: $placeholder-focus-color;
                    }
                }
            }
        } @else if ($on-focus == 'focus-hidden') {
            &:focus#{$vendor}#{$prefix} {
                @if ($vendor != ':-ms') {
                    opacity: 0;
                }
            }
        }
	}
}

// Counter Increment Mixin, create a numerated list.
// @require: {counter-reset: section;} defined on a parent selector
// @note: include this on a child selector on `::before`, your separator, space or not.
// @author: mbertoldo@alpenite.com
// ----------------------------------

@mixin counter-increment($separator, $space: space) {
	@if ($space == 'no-space') {
		$space: '';
	} @else {
		$space: ' ';
	}

	counter-increment: section;
	content: counters(section,'#{$separator}') $space;
}
