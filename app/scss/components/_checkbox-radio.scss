// @custom: checkbox & radio input
// @require: <label/> with `for` attribute in according to input `id`
// @note: generate a pseudo elements for every input, fully customizable with associate <label/>.
// @author: mbertoldo@alpenite.com
// @access: private

@mixin checkbox-radio-classes {
    /*@custom input checkbox & radio*/
    .input-checkbox,
    .input-radio {
    	display: inline-block;
    	position: relative;
    	font-size: $global-input-font-size;
        margin: 0;
    	padding-left: $global-custom-checkbox-radio-size + $custom-checkbox-radio-label-gutter;
    	cursor: pointer;
    	user-select: none;

    	&::before,
        &::after {
    		content: '';
    		position: absolute;
    	}

    	&::before {
    		top: 50%;
    		left: 0;
    		width: $global-custom-checkbox-radio-size;
    		height: $global-custom-checkbox-radio-size;
            background-color: $global-input-background-color;
    		border: $global-input-border;
    		border-radius: $global-input-border-radius;
            margin-top: -(rem($global-custom-checkbox-radio-size / 2));
    		transition: border-color 0.3s ease;
            overflow: hidden;
    	}

    	@if ($global-hover-input-border) {
    		&:hover {
                &::before {
        			border-color: $global-hover-input-border-color;
        		}
            }
    	}

    	&::after {
    		transition: transform 0.3s ease;
    	}
    }

    // @global marker size for checkbox & radio
    // @return: {String}
    // @note: the marker will always be half size compared to `$global-custom-checkbox-radio-size`;
    // --------------------------------

    $marker-size: ($global-custom-checkbox-radio-size / 2);
    $marker-size-half: ($marker-size / 2);

    .input-checkbox {
    	&::after {
    		top: 50%;
    		left: rem(($global-custom-checkbox-radio-size - $marker-size-half) / 2);
    		@include arrow(rem($marker-size-half), rem($marker-size), $custom-checkbox-mark-color, $custom-checkbox-mark-thick);
            margin-top: -(rem($marker-size-half));
    		transform: scale3d(0, 0, 0) rotate3d(0, 0, 1, 45deg) translate3d(0, 0, 0);
    	}

    	input[type="checkbox"]:checked + & {
    		@if ($checked-custom-input-border) {
    			&::before {
    				border-color: $custom-checkbox-checked-border;
    			}
    		}

    		&::after {
    			transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 45deg) translate3d(0, 0, 0);
    		}
    	}

        input[type="checkbox"]:focus:not(:checked) + & {
            &::before {
                border-color: $global-focus-input-border-color;
            }
        }

        @if ($custom-checkbox-radio-outline-detect) {
            [data-whatinput="initial"] input[type="checkbox"]:focus + &,
            [data-whatinput="keyboard"] input[type="checkbox"]:focus + & {
                &::before {
                    outline: -webkit-focus-ring-color auto 5px;
                    outline-offset: -2px;
                 }
            }
        }
    }

    .input-radio {
    	&::before,
        &::after {
    		border-radius: 50%;
    	}

    	&::after {
    		top: 50%;
    		left: rem(($global-custom-checkbox-radio-size - $marker-size) / 2);
    		width: rem($marker-size);
    		height: rem($marker-size);
    		background-color: $custom-radio-mark-color;
            margin-top: -(rem($marker-size / 2));
    		transform: scale3d(0, 0, 0) translate3d(0, 0, 0);
    	}

    	input[type="radio"]:checked + & {
    		@if ($checked-custom-input-border) {
    			&::before {
    				border-color: $custom-radio-checked-border;
    			}
    		}

    		&::after {
    			transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
    		}
    	}

        input[type="radio"]:focus:not(:checked) + & {
            &::before {
                border-color: $global-focus-input-border-color;
            }
        }

        @if ($custom-checkbox-radio-outline-detect) {
            [data-whatinput="initial"] input[type="radio"]:focus + &,
            [data-whatinput="keyboard"] input[type="radio"]:focus + & {
                &::before {
                    outline: -webkit-focus-ring-color auto 5px;
                    outline-offset: -2px;
                 }
            }
        }
    }
}
