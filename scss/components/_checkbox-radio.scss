// RenderKit
// github.com/matteobertoldo/renderkit
// Licensed under MIT Open Source

////
/// @group checkbox & radio
////

/// If set to `true` the alignment of the checkbox-radio components will line up in the middle of the text.
/// @type Boolean
$custom-checkbox-radio-align-center: false !default;

/// The size the global dimension of the checkbox-radio components.
/// @type Integer
$custom-checkbox-radio-size: 24px !default;

/// Default font family for checkbox-radio components.
/// @type String
$custom-checkbox-radio-font-family: sans-serif !default;

/// Default font size for checkbox-radio components.
/// @type Integer
$custom-checkbox-radio-font-size: 12px !default;

/// Default text transform for checkbo-radio components.
/// @type String
$custom-checkbox-radio-text-transform: none !default;

/// Default letter spacing for checkbox-radio components.
/// @type String|Integer
$custom-checkbox-radio-letter-spacing: normal !default;

/// Default color for checkbox & radio components.
/// @type Color
$custom-checkbox-radio-color: #666666 !default;

/// The space between the label text and the shape of the custom checkbox-radio component.
/// @type Integer
$custom-checkbox-radio-label-gutter: 10px !default;

/// The `background-color` custom for checkbox-radio component.
/// @type Color
$custom-checkbox-radio-background-color: #efefef !default;

/// The `border-color` for custom checkbox-radio component.
/// @type String
$custom-checkbox-radio-border: 1px solid #d9d9d9 !default;

/// The `border-radius` for custom checkbox component.
/// @type Integer
$custom-checkbox-border-radius: 5px !default;

// Internal variabiles for "marker-size" for checkbox-radio components.
$marker-size: ($custom-checkbox-radio-size / 2);
$marker-size-half: ($marker-size / 2);


@mixin checkbox-radio-style($center-align: false) {
    @if ($custom-checkbox-radio-align-center) {
        display: inline-block;
    } @else {
        display: inline-flex;
        align-items: center;
        min-height: $custom-checkbox-radio-size;
    }
    position: relative;
    font: {
        family: $custom-checkbox-radio-font-family;
        size: $custom-checkbox-radio-font-size;
    }
    text-transform: $custom-checkbox-radio-text-transform;
    letter-spacing: $custom-checkbox-radio-letter-spacing;
    color: $custom-checkbox-radio-color;
    margin: 0;
    padding-left: $custom-checkbox-radio-size + $custom-checkbox-radio-label-gutter;
    cursor: $custom-checkbox-radio-cursor;

    &::before,
    &::after {
        content: '';
        position: absolute;
    }

    &::before {
        @if ($custom-checkbox-radio-align-center) {
            top: 50%;
        } @else {
            top: 0;
        }
        left: 0;
        width: $custom-checkbox-radio-size;
        height: $custom-checkbox-radio-size;
        background-color: $custom-checkbox-radio-background-color;
        border: $custom-checkbox-radio-border;
        border-radius: $custom-checkbox-border-radius;
        @if ($custom-checkbox-radio-align-center) {
            margin-top: -(rem($custom-checkbox-radio-size / 2));
        }
        transition: border-color 0.3s ease;
        overflow: hidden;
    }

    &::after {
        transition: transform 0.3s ease;
    }
}

@mixin shape-checkbox($center-align: false) {
    &::after {
        @if ($custom-checkbox-radio-align-center) {
            top: 50%;
        } @else {
            top: rem($custom-checkbox-radio-size - ($marker-size + $marker-size-half));
        }
        left: rem(($custom-checkbox-radio-size - $marker-size-half) / 2);
        @include arrow(rem($marker-size-half), rem($marker-size), $custom-checkbox-mark-color, $custom-checkbox-mark-thick);
        @if ($custom-checkbox-radio-align-center) {
            margin-top: -(rem($marker-size-half));
        }
        transform: scale3d(0, 0, 0) rotate3d(0, 0, 1, 45deg) translate3d(0, 0, 0);
    }
}

@mixin checkbox-attr {
    input[type="checkbox"][disabled] + & {
        opacity: $global-disable-input-opacity !important;
    }

    @if ($custom-checkbox-radio-hover-border) {
        input[type="checkbox"]:not([disabled]) + &:hover {
            &::before {
                border-color: $custom-checkbox-radio-hover-border-color;
            }
        }
    }

    input[type="checkbox"]:checked + & {
        @if ($custom-checkbox-radio-checked-border) {
            &::before {
                border-color: $custom-checkbox-checked-border;
            }
        }

        &::after {
            transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 45deg) translate3d(0, 0, 0);
        }
    }

    input[type="checkbox"]:focus:not(:checked) + & {
        &::before {
            border-color: $global-focus-input-border-color;
        }
    }

    input[type="checkbox"].#{$validation-input-error-class}:not([disabled]) + & {
        &::before {
            border-color: $validation-input-error-border-color;
            background-color: $validation-input-error-background-color;
        }
    }

    input[type="checkbox"].#{$validation-input-error-class}:focus:not(:checked) + & {
        &::before {
            border-color: $validation-input-error-border-color;
        }
    }

    @if ($custom-checkbox-radio-outline-detect) {
        @if ($custom-checkbox-radio-what-input-outline-detect) {
            [data-whatinput="initial"] input[type="checkbox"]:focus + &,
            [data-whatinput="keyboard"] input[type="checkbox"]:focus + & {
                &::before {
                    outline: -webkit-focus-ring-color auto 5px;
                    outline-offset: -2px;
                 }
            }
        } @else {
            input[type="checkbox"]:focus + & {
                &::before {
                    outline: -webkit-focus-ring-color auto 5px;
                    outline-offset: -2px;
                }
             }
        }
    }
}

@mixin shape-radio($center-align: false) {
    &::before,
    &::after {
        border-radius: 50%;
    }

    &::after {
        @if ($custom-checkbox-radio-align-center) {
            top: 50%;
        } @else {
            top: rem(($custom-checkbox-radio-size - $marker-size) / 2);
        }
        left: rem(($custom-checkbox-radio-size - $marker-size) / 2);
        width: rem($marker-size);
        height: rem($marker-size);
        background-color: $custom-radio-mark-color;
        @if ($custom-checkbox-radio-align-center) {
            margin-top: -(rem($marker-size / 2));
        }
        transform: scale3d(0, 0, 0) translate3d(0, 0, 0);
    }
}

@mixin radio-attr {
    input[type="radio"][disabled] + & {
        opacity: $global-disable-input-opacity !important;
    }

    @if ($custom-checkbox-radio-hover-border) {
        input[type="radio"]:not([disabled]) + &:hover {
            &::before {
                border-color: $custom-checkbox-radio-hover-border-color;
            }
        }
    }

    input[type="radio"]:checked + & {
        @if ($custom-checkbox-radio-checked-border) {
            &::before {
                border-color: $custom-radio-checked-border;
            }
        }

        &::after {
            transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
        }
    }

    input[type="radio"]:focus:not(:checked) + & {
        &::before {
            border-color: $global-focus-input-border-color;
        }
    }

    input[type="radio"].#{$validation-input-error-class} + & {
        &::before {
            border-color: $validation-input-error-border-color;
        }
    }

    input[type="radio"].#{$validation-input-error-class}:focus:not(:checked) + & {
        &::before {
            border-color: $validation-input-error-border-color;
        }
    }

    @if ($custom-checkbox-radio-outline-detect) {
        @if ($custom-checkbox-radio-what-input-outline-detect) {
            [data-whatinput="initial"] input[type="radio"]:focus + &,
            [data-whatinput="keyboard"] input[type="radio"]:focus + & {
                &::before {
                    outline: -webkit-focus-ring-color auto 5px;
                    outline-offset: -2px;
                 }
            }
        } @else {
            input[type="radio"]:focus + & {
                &::before {
                    outline: -webkit-focus-ring-color auto 5px;
                    outline-offset: -2px;
                }
             }
        }
    }
}

/// Checkbox radio classes
/// @group _global renderkit
@mixin checkbox-radio-classes {
    /*@custom input checkbox & radio*/
    .input-checkbox,
    .input-radio {
        @include checkbox-radio-style;
    }

    .input-checkbox {
        @include shape-checkbox;
        @include checkbox-attr;
    }

    .input-radio {
        @include shape-radio;
        @include radio-attr;
    }
}
